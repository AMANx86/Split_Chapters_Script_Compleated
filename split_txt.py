# split_txt.py
# Splits a large .txt file into individual chapters and saves to chapters_txt(txt)/

import os
import re

# === CONFIG ===
INPUT_FILE = 'mybook.txt'  # Change as needed
OUTPUT_FOLDER = 'chapters_txt(txt)'
MIN_CONTENT_CHARS = 100

# === REGEX for Chapter Headings ===
CHAPTER_RE = re.compile(r'(chapter\s+\d+(\s*[-–:]\s*.*)?)', re.IGNORECASE)

# === UTILS ===
def remove_front_matter(text):
    junk_start = [
        "Generated by Lightnovel Crawler",
        "Table of Contents",
        "Preface",
        "Volume ",
        "Source:"
    ]
    for junk in junk_start:
        text = text.split(junk, maxsplit=1)[-1]
    return text.strip()

def split_chapters(text):
    matches = list(CHAPTER_RE.finditer(text))
    chapter_starts = []

    for i, match in enumerate(matches):
        chap_title = match.group(1).strip()

        # Skip exact duplicate header
        if i > 0 and chap_title.lower() == matches[i - 1].group(1).strip().lower():
            continue

        chapter_starts.append((match.start(), chap_title))

    chapters = []
    for i, (start_idx, title) in enumerate(chapter_starts):
        end_idx = chapter_starts[i + 1][0] if i + 1 < len(chapter_starts) else len(text)
        content = text[start_idx:end_idx].strip()
        if len(content) < MIN_CONTENT_CHARS:
            continue  # skip garbage
        chapters.append((i + 1, title, content))

    return chapters

def save_chapters(chapters, out_dir):
    os.makedirs(out_dir, exist_ok=True)
    for num, title, content in chapters:
        filename = f'chapter_{num:04}.txt'
        path = os.path.join(out_dir, filename)
        with open(path, 'w', encoding='utf-8') as f:
            f.write(content.strip() + '\n')
        print(f"✅ Saved: {filename} – {title}")

def main():
    if not os.path.exists(INPUT_FILE):
        print(f"❌ File not found: {INPUT_FILE}")
        return

    with open(INPUT_FILE, 'r', encoding='utf-8') as f:
        full_text = f.read()

    print("🧹 Cleaning front matter...")
    clean_text = remove_front_matter(full_text)

    print("🔍 Splitting into chapters...")
    chapters = split_chapters(clean_text)

    print(f"📦 {len(chapters)} chapters found. Saving to '{OUTPUT_FOLDER}'...")
    save_chapters(chapters, OUTPUT_FOLDER)

if __name__ == '__main__':
    main()
